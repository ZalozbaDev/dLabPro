// dLabPro class CProcess (process)
// - Header file
//
// AUTHOR : Matthias Wolff
// PACKAGE: dLabPro/classes
//
// This file was generated by dcg. DO NOT MODIFY! Modify process.def instead.
// 
// Copyright 2013 dLabPro contributors and others (see COPYRIGHT file) 
// - Chair of System Theory and Speech Technology, TU Dresden
// - Chair of Communications Engineering, BTU Cottbus
// 
// This file is part of dLabPro.
// 
// dLabPro is free software: you can redistribute it and/or modify it under the
// terms of the GNU Lesser General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option)
// any later version.
// 
// dLabPro is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
// details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with dLabPro. If not, see <http://www.gnu.org/licenses/>.


//{{CGEN_INCLUDE
#include "dlp_config.h"
#include "dlp_object.h"
#include "dlp_function.h"
#include "dlp_var.h"
//}}CGEN_END

//{{CGEN_ERRORS
#undef PRC_TOOFEWARGS      
#undef PRC_CANTSTART       
#undef PRC_CANTWAIT        
#define PRC_TOOFEWARGS       -1001
#define PRC_CANTSTART        -1002
#define PRC_CANTWAIT         -1003
//}}CGEN_END

// C/C++ language abstraction layer
#undef process_par
#define process_par CProcess

// dLabPro/C++ language abstraction layer
#undef process
#define process CProcess

//{{CGEN_DEFINE
#define PRC_S_IDSIGN     "idSign"
#define PRC_S_IDGLOB     "idGlob"
#define PRC_S_IDINCL     "idInclude"
#define PRC_S_RETV       "~iRetv"
#define PRC_RUNNING      0x0001
#define PRC_COMPLETE     0x0002
#define PRC_KILLED       0x0004
#define PRC_DATASENT     0x0010
#define PRC_DATARECEIVED 0x0020
//}}CGEN_DEFINE

#ifndef __PROCESS_H
#define __PROCESS_H

//{{CGEN_HEADERCODE
//}}CGEN_HEADERCODE

// Class CProcess

class CProcess : public CDlpObject 
{

typedef CDlpObject inherited;
typedef CProcess thisclass;

//{{CGEN_FRIENDS
//}}CGEN_FRIENDS
public:
	CProcess(const char* lpInstanceName, BOOL bCallVirtual = 1);
	virtual ~CProcess();

// Virtual and static function overrides
public:
	virtual INT16 AutoRegisterWords();
	virtual INT16 Init(BOOL bCallVirtual = 0);
	virtual INT16 Reset(BOOL bResetMembers = 1);
	virtual INT16 Serialize(CDN3Stream* lpDest);
	virtual INT16 SerializeXml(CXmlStream* lpDest);
	virtual INT16 Deserialize(CDN3Stream* lpSrc);
	virtual INT16 DeserializeXml(CXmlStream* lpSrc);
	virtual INT16 Copy(CDlpObject* iSrc);
	virtual INT16 ClassProc();
	static  INT16 InstallProc(void* lpItp);
	static  CProcess* CreateInstance(const char* lpName);
	static  INT16 GetClassInfo(SWord* lpClassWord);
	virtual INT16 GetInstanceInfo(SWord* lpClassWord);
	virtual BOOL  IsKindOf(const char* lpClassName);
	virtual INT16 ResetAllOptions(BOOL bInit = 0);

// Primary method invocation functions            
// DO NOT CALL THESE FUNCTIONS FROM C SCOPE.      
// THEY MAY INTERFERE WITH THE INTERPRETER SESSION
#ifndef __NOITP
public:
//{{CGEN_PMIC
	INT16 OnIsComplete();
	INT16 OnIsRunning();
//}}CGEN_PMIC
#endif // #ifndef __NOITP

// Secondary method invocation functions
public:
//{{CGEN_SMIC
	BOOL IsComplete();
	BOOL IsRunning();
//}}CGEN_SMIC

// Option changed callback functions
public:
//{{CGEN_OCCF
//}}CGEN_OCCF

// Field changed callback functions
public:
//{{CGEN_FCCF
//}}CGEN_FCCF

// Scanned member functions
//{{CGEN_EXPORT

// Taken from 'prc_impl.cpp'
	private: INT32 DoJobFork(CFunction* iCaller, CFunction* iFnc);
	protected: void Pack(CDlpObject* iDto, CData* idSign, StkItm* pStkItm, const char* psName);
	protected: void Marshal(CDlpObject* iDto, CFunction* iCaller, INT32 nArgs);
	protected: void Unmarshal(CDlpObject* iDto, CFunction* iCaller);
	public: INT16 SendData();
	protected: void ReceiveData();
	public: INT32 Start();
	public: INT16 Wait();
	public: INT16 Status();
	public: INT16 MarshalRetval();
//}}CGEN_EXPORT

// Member variables
public:

//{{CGEN_FIELDS
	char*            m_psCmdLine;
	CDlpObject*      m_iDto;
	PROCESSID        m_hPid;
	INT32            m_nRetVal;
	UINT16           m_nState;
	THREADHANDLE     m_hThread;
	char*            m_psTmpFile;
//}}CGEN_FIELDS

//{{CGEN_OPTIONS
	BOOL m_bGlobal;
	BOOL m_bInclude;
//}}CGEN_OPTIONS
}

;

// Scanned C (member) functions
//{{CGEN_CEXPORT

// Taken from 'prc_impl.cpp'
void* DoJob(void* pvProcess);
//}}CGEN_CEXPORT

#endif //#ifndef __PROCESS_H


// EOF
