/* dLabPro SDK class CHelloworld (Helloworld)
 * - Header file
 *
 * AUTHOR : m.eichner
 * PACKAGE: dLabPro/sdk
 *
 * This file was generated by dcg. DO NOT MODIFY! Modify helloworld.def instead.
 * 
 * Copyright 2013 dLabPro contributors and others (see COPYRIGHT file) 
 * - Chair of System Theory and Speech Technology, TU Dresden
 * - Chair of Communications Engineering, BTU Cottbus
 * 
 * This file is part of dLabPro.
 * 
 * dLabPro is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 * 
 * dLabPro is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with dLabPro. If not, see <http://www.gnu.org/licenses/>.
 */

/*{{CGEN_INCLUDE */
#include "dlp_config.h"
#include "dlp_object.h"
#include "dlp_function.h"
/*}}CGEN_END */

/*{{CGEN_ERRORS */
#undef PAR_ERROR           
#define PAR_ERROR            -1001
/*}}CGEN_END */

/* C/C++ language abstraction layer */
#undef helloworld_par
#define helloworld_par CHelloworld

/* dLabPro/C++ language abstraction layer */
#undef Helloworld
#define Helloworld CHelloworld

/*{{CGEN_DEFINE */
/*}}CGEN_DEFINE */

#ifndef __HELLOWORLD_H
#define __HELLOWORLD_H

/*{{CGEN_HEADERCODE */
/*}}CGEN_HEADERCODE */

/* Class CHelloworld */

#ifdef __cplusplus

class CHelloworld : public CDlpObject 
{

typedef CDlpObject inherited;
typedef CHelloworld thisclass;

/*{{CGEN_FRIENDS */
/*}}CGEN_FRIENDS */
public:
	CHelloworld(const char* lpInstanceName, BOOL bCallVirtual = 1);
	virtual ~CHelloworld();

/* Virtual and static function overrides */
public:
	virtual INT16 AutoRegisterWords();
	virtual INT16 Init(BOOL bCallVirtual = 0);
	virtual INT16 Reset(BOOL bResetMembers = 1);
	virtual INT16 Serialize(CDN3Stream* lpDest);
	virtual INT16 SerializeXml(CXmlStream* lpDest);
	virtual INT16 Deserialize(CDN3Stream* lpSrc);
	virtual INT16 DeserializeXml(CXmlStream* lpSrc);
	virtual INT16 Copy(CDlpObject* iSrc);
	virtual INT16 ClassProc();
	static  INT16 InstallProc(void* lpItp);
	static  CHelloworld* CreateInstance(const char* lpName);
	static  INT16 GetClassInfo(SWord* lpClassWord);
	virtual INT16 GetInstanceInfo(SWord* lpClassWord);
	virtual BOOL  IsKindOf(const char* lpClassName);
	virtual INT16 ResetAllOptions(BOOL bInit = 0);

/* Primary method invocation functions             */
/* DO NOT CALL THESE FUNCTIONS FROM C SCOPE.       */
/* THEY MAY INTERFERE WITH THE INTERPRETER SESSION */
#ifndef __NOITP
public:
/*{{CGEN_PMIC */
	INT16 OnDm();
	INT16 OnSayhello();
/*}}CGEN_PMIC */
#endif /* #ifndef __NOITP */

/* Secondary method invocation functions */
public:
/*{{CGEN_SMIC */
	INT16 Sayhello();
/*}}CGEN_SMIC */

/* Option changed callback functions */
public:
/*{{CGEN_OCCF */
	INT16 OnGermanSet();
/*}}CGEN_OCCF */

/* Field changed callback functions */
public:
/*{{CGEN_FCCF */
	INT16 OnGreetingEnglishChanged();
	INT16 OnGreetingGermanChanged();
/*}}CGEN_FCCF */

/* Scanned member functions */
/*{{CGEN_EXPORT */

/* Taken from 'helloworld_dm.c' */
	public: short Dm(CData* idSrc, long nOversample, CData* idDst);
/*}}CGEN_EXPORT */

/* Member variables */
public:
/*{{CGEN_ICXX_FIELDS */
	CData*           m_fieldData;
/*}}CGEN_ICXX_FIELDS */

#else  /* #ifdef __cplusplus */

typedef struct CHelloworld
{
  /* Pointer to C base instance */
  struct CDlpObject* m_lpBaseInstance;

/*{{CGEN_IC_FIELDS */
	CDlpObject*      m_fieldData;
/*}}CGEN_IC_FIELDS */

#endif /* #ifdef __cplusplus */

/*{{CGEN_FIELDS */
	BOOL             m_fieldBool;
	char             m_fieldChar;
	FLOAT64          m_fieldDouble;
	FLOAT32          m_fieldFloat;
	INT64            m_fieldLong;
	INT16            m_fieldShort;
	UINT8            m_fieldUchar;
	UINT64           m_fieldUlong;
	UINT16           m_fieldUshort;
	char*            m_greetingEnglish;
	char*            m_greetingGerman;
/*}}CGEN_FIELDS */

/*{{CGEN_OPTIONS */
	BOOL m_bAdm;
	BOOL m_bGerman;
/*}}CGEN_OPTIONS */
}

#ifndef __cplusplus
CHelloworld
#endif
;

/* Class CHelloworld (C functions)*/

/* Virtual function overrides */
void  CHelloworld_Constructor(CHelloworld*, const char* lpInstanceName, BOOL bCallVirtual);
void  CHelloworld_Destructor(CDlpObject*);
INT16 CHelloworld_AutoRegisterWords(CDlpObject*);
INT16 CHelloworld_Reset(CDlpObject*, BOOL bResetMembers);
INT16 CHelloworld_Init(CDlpObject*, BOOL bCallVirtual);
INT16 CHelloworld_Serialize(CDlpObject*, CDN3Stream* lpDest);
INT16 CHelloworld_SerializeXml(CDlpObject*, CXmlStream* lpDest);
INT16 CHelloworld_Deserialize(CDlpObject*, CDN3Stream* lpSrc);
INT16 CHelloworld_DeserializeXml(CDlpObject*, CXmlStream* lpSrc);
INT16 CHelloworld_Copy(CDlpObject*, CDlpObject* __iSrc);
INT16 CHelloworld_ClassProc(CDlpObject*);
INT16 CHelloworld_InstallProc(void* lpItp);
CHelloworld* CHelloworld_CreateInstance(const char* lpName);
INT16 CHelloworld_GetClassInfo(SWord* lpClassWord);
INT16 CHelloworld_GetInstanceInfo(CDlpObject*, SWord* lpClassWord);
BOOL  CHelloworld_IsKindOf(CDlpObject*, const char* lpClassName);
INT16 CHelloworld_ResetAllOptions(CDlpObject*, BOOL bInit);

/* Primary method invocation functions             */
/* DO NOT CALL THESE FUNCTIONS FROM C SCOPE.       */
/* THEY MAY INTERFERE WITH THE INTERPRETER SESSION */
#ifndef __NOITP
/*{{CGEN_CPMIC */
INT16 CHelloworld_OnDm(CDlpObject*);
INT16 CHelloworld_OnSayhello(CDlpObject*);
/*}}CGEN_CPMIC */
#endif /* #ifndef __NOITP */

/* Secondary method invocation functions */
/*{{CGEN_CSMIC */
INT16 CHelloworld_Sayhello(CHelloworld*);
/*}}CGEN_CSMIC */

/* Option changed callback functions */
/*{{CGEN_COCCF */
INT16 CHelloworld_OnGermanSet(CDlpObject*);
/*}}CGEN_COCCF */

/* Field changed callback functions */
/*{{CGEN_CFCCF */
INT16 CHelloworld_OnGreetingEnglishChanged(CDlpObject*);
INT16 CHelloworld_OnGreetingGermanChanged(CDlpObject*);
/*}}CGEN_CFCCF */

/* Scanned C (member) functions */
/*{{CGEN_CEXPORT */

/* Taken from 'helloworld_dm.c' */
short CHelloworld_Dm(CHelloworld*, CData* idSrc, long nOversample, CData* idDst);
/*}}CGEN_CEXPORT */

#endif /*#ifndef __HELLOWORLD_H */


/* EOF */
