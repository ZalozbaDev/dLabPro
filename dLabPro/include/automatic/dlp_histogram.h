// dLabPro class CHistogram (histogram)
// - Header file
//
// AUTHOR : C.-M. Westendorf
// PACKAGE: dLabPro/classes
//
// This file was generated by dcg. DO NOT MODIFY! Modify histogram.def instead.
// 
// Copyright 2013 dLabPro contributors and others (see COPYRIGHT file) 
// - Chair of System Theory and Speech Technology, TU Dresden
// - Chair of Communications Engineering, BTU Cottbus
// 
// This file is part of dLabPro.
// 
// dLabPro is free software: you can redistribute it and/or modify it under the
// terms of the GNU Lesser General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option)
// any later version.
// 
// dLabPro is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
// details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with dLabPro. If not, see <http://www.gnu.org/licenses/>.


//{{CGEN_INCLUDE
#include "dlp_config.h"
#include "dlp_object.h"
#include "dlp_data.h"
#include "dlp_obsolete.h"
//}}CGEN_END

//{{CGEN_ERRORS
#undef HIS_ZERO            
#undef HIS_INCONS          
#undef HIS_EMPTY           
#undef HIS_NOINP           
#undef HIS_TYPE            
#undef HIS_TAB             
#undef HIS_NODAT           
#undef HIS_NOLAB           
#undef HIS_HISTO           
#undef HIS_INDEX           
#undef HIS_NOIC            
#undef HIS_NOEXEC          
#undef HIS_NOSTEPS         
#undef HIS_MINMAXERR       
#undef HIS_BINERR          
#undef HIS_SHORTLIST       
#undef HIS_SHORTWEIGHT     
#undef HIS_POOLE           
#undef HIS_NODISP          
#define HIS_ZERO             -1001
#define HIS_INCONS           -1002
#define HIS_EMPTY            -1003
#define HIS_NOINP            -1004
#define HIS_TYPE             -1005
#define HIS_TAB              -1006
#define HIS_NODAT            -1007
#define HIS_NOLAB            -1008
#define HIS_HISTO            -1009
#define HIS_INDEX            -1010
#define HIS_NOIC             -1011
#define HIS_NOEXEC           -1012
#define HIS_NOSTEPS          -1013
#define HIS_MINMAXERR        -1014
#define HIS_BINERR           -1015
#define HIS_SHORTLIST        -1016
#define HIS_SHORTWEIGHT      -1017
#define HIS_POOLE            -1018
#define HIS_NODISP           -1019
//}}CGEN_END

// C/C++ language abstraction layer
#undef histogram_par
#define histogram_par CHistogram

// dLabPro/C++ language abstraction layer
#undef histogram
#define histogram CHistogram

//{{CGEN_DEFINE
#define HIS_STEPS (INT16)data_descr(m_hist,DESCR2)
#define HIS_MODE  (INT16)data_descr(m_hist,DESCR1)
//}}CGEN_DEFINE

#ifndef __HISTOGRAM_H
#define __HISTOGRAM_H

//{{CGEN_HEADERCODE
//}}CGEN_HEADERCODE

// Class CHistogram

class CHistogram : public CDlpObject 
{

typedef CDlpObject inherited;
typedef CHistogram thisclass;

//{{CGEN_FRIENDS
//}}CGEN_FRIENDS
public:
	CHistogram(const char* lpInstanceName, BOOL bCallVirtual = 1);
	virtual ~CHistogram();

// Virtual and static function overrides
public:
	virtual INT16 AutoRegisterWords();
	virtual INT16 Init(BOOL bCallVirtual = 0);
	virtual INT16 Reset(BOOL bResetMembers = 1);
	virtual INT16 Serialize(CDN3Stream* lpDest);
	virtual INT16 SerializeXml(CXmlStream* lpDest);
	virtual INT16 Deserialize(CDN3Stream* lpSrc);
	virtual INT16 DeserializeXml(CXmlStream* lpSrc);
	virtual INT16 Copy(CDlpObject* iSrc);
	virtual INT16 ClassProc();
	static  INT16 InstallProc(void* lpItp);
	static  CHistogram* CreateInstance(const char* lpName);
	static  INT16 GetClassInfo(SWord* lpClassWord);
	virtual INT16 GetInstanceInfo(SWord* lpClassWord);
	virtual BOOL  IsKindOf(const char* lpClassName);
	virtual INT16 ResetAllOptions(BOOL bInit = 0);

// Primary method invocation functions            
// DO NOT CALL THESE FUNCTIONS FROM C SCOPE.      
// THEY MAY INTERFERE WITH THE INTERPRETER SESSION
#ifndef __NOITP
public:
//{{CGEN_PMIC
	INT16 OnChiquStat();
	INT16 OnChiquStatA();
	INT16 OnCopyHbl();
	INT16 OnMcopyHbl();
	INT16 OnMeanvar();
	INT16 OnPoole();
	INT16 OnPrintSt();
	INT16 OnQuantil();
	INT16 OnReorg();
	INT16 OnSelect();
	INT16 OnShow();
	INT16 OnShowC();
	INT16 OnUpdate();
	INT16 OnUpdateI();
	INT16 OnUpdateIw();
	INT16 OnUpdateW();
//}}CGEN_PMIC
#endif // #ifndef __NOITP

// Secondary method invocation functions
public:
//{{CGEN_SMIC
	INT16 ChiquStat(histogram* h, data* chi);
	INT16 ChiquStatA(data* chi, INT32 ic);
	INT16 Clear();
	INT16 CopyHbl(INT32 i, INT32 j);
	INT16 McopyHbl(INT32 i);
	INT16 Meanvar(data* mean, data* var);
	INT16 PrintIndex();
	INT16 PrintLabtab();
	INT16 PrintMinmax();
	INT16 PrintSt(INT32 i);
	INT16 Quantil(data* qlo, data* qhi, data* pql, FLOAT64 p);
	INT16 Reorg(data* ex);
	INT16 VhReset();
	INT16 Select(data* h, INT32 i);
	INT16 Show(INT32 i, data* idOut);
	INT16 ShowC(INT32 i, INT32 ic, data* idOut);
	INT16 Status();
	INT16 Update(data* x);
	INT16 UpdateI(data* x, data* itab);
	INT16 UpdateIw(data* x, data* itab, data* w);
	INT16 UpdateW(data* x, data* w);
//}}CGEN_SMIC

// Option changed callback functions
public:
//{{CGEN_OCCF
	INT16 OnWindowSet();
//}}CGEN_OCCF

// Field changed callback functions
public:
//{{CGEN_FCCF
	INT16 OnBinsChanged();
	INT16 OnHistChanged();
	INT16 OnMaxChanged();
	INT16 OnMinChanged();
	INT16 OnMinmaxChanged();
	INT16 OnNhistChanged();
//}}CGEN_FCCF

// Scanned member functions
//{{CGEN_EXPORT

// Taken from 'his_aux.cpp'
	public: INT16 PrintStatus();
	protected: void UpdateHdesc();
	protected: INT32 FindIndexcomp(CData* x);
	protected: INT32 GenIndexlist(CData* x, CData* tab);
	protected: INT16 SetDefMinmax();

// Taken from 'his_chi.cpp'
	public: INT16 Chiqu(CHistogram* h1, CHistogram* h2, CData* chi);
	public: INT16 ChiquComp(CData* chi, INT32 ic);

// Taken from 'his_mod.cpp'
	protected: INT32 BytesPerBlock();
	protected: void QuantVec(FLOAT64* u, INT32* v, FLOAT64* minm, INT32 il);
	public: INT16 SelectBlock(CData* ihist, INT32 i, INT32 j);
	public: INT16 CopyBlock(INT32 i, INT32 j);
	public: INT16 ReorgEx(CData* exist, INT32 nind);
	public: INT16 Poole(CHistogram* h);

// Taken from 'his_show.cpp'
	public: INT16 PrintPar(INT32 ih);
	public: INT16 ShowEx(INT32 ir, INT32 ic, const char* name, CData* idOut);

// Taken from 'his_stat.cpp'
	public: void MeanVarComp(FLOAT64* hdat, FLOAT64* minm, FLOAT64* mean, FLOAT64* vari);
	public: INT16 GenStatistic(data* stat, INT16 smode);
	public: INT16 MeanVar(data* mean, data* var);
	public: INT16 Pquantil(data* qlo, data* qhi, data* pq, FLOAT64 p);

// Taken from 'his_upd.cpp'
	protected: void IncrementHisto(INT32* v, FLOAT64 w, INT32 il);
	protected: INT32 Prepare(CData* x, CData* wv);
	public: INT16 UpdateHist(CData* x, CData* wv);

// Taken from 'his_err.cpp'
	protected: INT16 CheckMinmax();
	protected: INT16 SetupHmode();
	protected: INT16 CheckHisto();
	protected: INT16 CheckConsist();
//}}CGEN_EXPORT

// Member variables
public:

//{{CGEN_FIELDS
	INT32            m_bins;
	INT32            m_calls;
	char             m_cname[5];
	INT32            m_count;
	INT32            m_hdim;
	CData*           m_hist;
	INT16            m_hmode;
	INT32            m_icomp;
	CData*           m_indexlist;
	CData*           m_labtab;
	FLOAT64          m_max;
	FLOAT64          m_min;
	CData*           m_minm;
	CData*           m_minmax;
	INT32            m_nhist;
	INT16            m_pl;
	INT32            m_ssize;
	INT16            m_wflag;
//}}CGEN_FIELDS

//{{CGEN_OPTIONS
	BOOL m_bWindow;
//}}CGEN_OPTIONS
}

;

// Scanned C (member) functions
//{{CGEN_CEXPORT

// Taken from 'his_aux.cpp'

// Taken from 'his_chi.cpp'

// Taken from 'his_mod.cpp'

// Taken from 'his_show.cpp'

// Taken from 'his_stat.cpp'

// Taken from 'his_upd.cpp'

// Taken from 'his_err.cpp'
//}}CGEN_CEXPORT

#endif //#ifndef __HISTOGRAM_H


// EOF
