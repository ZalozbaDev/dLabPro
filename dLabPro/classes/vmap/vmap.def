## dLabPro class CVmap (vmap)
## - Definition file
##
## AUTHOR : Christian-M. Westendorf, Matthias Wolff
## PACKAGE: dLabPro/classes
## 
## Copyright 2013 dLabPro contributors and others (see COPYRIGHT file) 
## - Chair of System Theory and Speech Technology, TU Dresden
## - Chair of Communications Engineering, BTU Cottbus
## 
## This file is part of dLabPro.
## 
## dLabPro is free software: you can redistribute it and/or modify it under the
## terms of the GNU Lesser General Public License as published by the Free
## Software Foundation, either version 3 of the License, or (at your option)
## any later version.
## 
## dLabPro is distributed in the hope that it will be useful, but WITHOUT ANY
## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
## details.
## 
## You should have received a copy of the GNU Lesser General Public License
## along with dLabPro. If not, see <http://www.gnu.org/licenses/>.

PLATFORM: GNUC++
COMPILER: gcc
AR:       ar
CFLAGS:   -Wno-trigraphs

PROJECT: vmap
AUTHOR:  Christian-M. Westendorf, Matthias Wolff
COMMENT: Vector mapping operator
VERSION: 1.0.0
/html MAN:
  <p>Instances of the <code>vmap</code> class transform <i>N</i>-dimensional "input" vectors into <i>M</i>-dimensional
  "output" vectors. The transformation is done through a generalized matrix product. Let <i>x</i> =
  <nobr>(<i>x</i><sup>(0)</sup>, <i>x</i><sup>(1)</sup>, ..., <i>x</i><sup>(<i>N</i>-1)</sup>)</nobr> be an input
  vector <i><b>w</b></i> a <i>N</i>x<i>M</i> <a href="#fld_tmx">transformation matrix</a>. The elements of the output
  vector <i>y</i> = <nobr>(<i>y</i><sup>(0)</sup>, <i>y</i><sup>(1)</sup>, ..., <i>y</i><sup>(<i>M</i>-1)</sup>)</nobr>
  are computed as the generalized scalar product</p>
  <p class="indent"><img src="../resources/vmap/0001.gif" width="172" height="41" border="0" align="absmiddle"> (1)</p>
  <p>over an arbitrary semiring {<b>R</b>, <img src="../resources/oplus.gif" width="11" height="11" border="0"
  align="absmiddle">, <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">, <span
  style="text-decoration:overline">0</span>, <span style="text-decoration:overline">1</span>} with</p>
  <table class="indent">
    <tr>
      <td class="hidden"><b>R</b></td>
      <td class="hidden">: </td>
      <td class="hidden">The set of real numbers including &plusmn;&infin;</td>
    </tr>
    <tr>
      <td class="hidden"><img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle"></td>
      <td class="hidden">: </td>
      <td class="hidden">An "aggregation" operation</td>
    </tr>
    <tr>
      <td class="hidden"><img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle"></td>
      <td class="hidden">: </td>
      <td class="hidden">A "weighting" operation</td>
    </tr>
    <tr>
      <td class="hidden"><span style="text-decoration:overline">0</span></td>
      <td class="hidden">: </td>
      <td class="hidden">The neutral element <span style="text-decoration:overline">0</span> of the aggregation
        operation such that <i>a</i> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
        <span style="text-decoration:overline">0</span> = <i>a</i></td>
    </tr>
    <tr>
      <td class="hidden"><span style="text-decoration:overline">1</span></td>
      <td class="hidden">: </td>
      <td class="hidden">The neutral element <span style="text-decoration:overline">1</span> of the weighting
        operation such that <i>a</i> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
        <span style="text-decoration:overline">1</span> = <i>a</i></td>
    </tr>
  </table>
  <p>The operators <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle"> and <img 
  src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle"> along with their neutral elements <span
  style="text-decoration:overline">0</span> and <span style="text-decoration:overline">1</span> have to be defined
  through the {@link -setup} or {@link -setup_i} methods. The vector transformation operation (1) is executed by the
  {@link -map} method.</p>

  <h4>Remarks</h4>
  <ul>
    <li><code>vmap</code> does not care whether the algebraic structure {<b>R</b>, <img src="../resources/oplus.gif" 
    width="11" height="11" border="0" align="absmiddle">, <img src="../resources/otimes.gif" width="11" height="11"
    border="0" align="absmiddle">, <span style="text-decoration:overline">0</span>, <span
    style="text-decoration:overline">1</span>} is actually a semiring or whether it even makes any sense at all. The
    vector transformation according to equation (1) will be done in all cases, free of any intelligence.</li>
    <li>When evaluating formula (1) <code>vmap</code> will <em>skip</em> summands whose weight is <span
    style="text-decoration:overline">0</span> (this is useful for algebraic structures which are no semirings; see field
    {@link zero} for details).</li>
    <li>The computation is done in the exact order specified in equation (1). You should consider this if one or both of
    the operations <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle"> or <img
    src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle"> are not commutative!</li>
  </ul>

  <h4>Example</h4>
  <p>The following example demonstrates some simple vector mapping:</p>
  <pre class="code">

  <a href="data.html" class="code">data</a> idImap;                                                                  <span class="c-cmt"># Index map</span>
  <a href="data.html" class="code">data</a> idWtab;                                                                  <span class="c-cmt"># Weight table</span>
  <a href="data.html" class="code">data</a> idX;                                                                     <span class="c-cmt"># Input vector sequence</span>
  <a href="data.html" class="code">data</a> idY;                                                                     <span class="c-cmt"># Output vector sequence</span>
  <span class="c-key">vmap</span> iMap;                                                                    <span class="c-cmt"># Vector mapping operator</span>
  
  <a href="function.html#mth_-type" class="code">-type</a> short  1 7 idImap <a href="data.html#mth_-array" class="code">-array</a> <a href="data.html#mth_{" class="code">{</a> 1      0    0    2    1      2    2    };    <span class="c-cmt"># Make index map</span>
  <a href="function.html#mth_-type" class="code">-type</a> double 1 7 idWtab <a href="data.html#mth_-array" class="code">-array</a> <a href="data.html#mth_{" class="code">{</a> \${1/3} 0.75 0.25 0.10 \${2/3} 0.70 0.20 };    <span class="c-cmt"># Make weight table</span>
  <a href="function.html#mth_-type" class="code">-type</a> double 7 2 idX <a href="data.html#mth_-array" class="code">-array</a>                                                   <span class="c-cmt"># Make a test vector sequence</span>
  <a href="data.html#mth_{" class="code">{</a>                                                                             <span class="c-cmt"># |</span>
    1 1      1  1 1   1       1                                                 <span class="c-cmt"># |</span>
    3 \${4/3} 4 10 1.5 \${10/7} 5                                                 <span class="c-cmt"># |</span>
  };                                                                            <span class="c-cmt"># |</span>

  idImap NULL "add" "mult" 0. 1. iMap {@link -setup_i};                                 <span class="c-cmt"># Setup unweighted summing operator</span>
  iMap {@link -status}; iMap.{@link tmx} <a href="data.html#mth_-print" class="code">-print</a>;                                                <span class="c-cmt"># Print setup</span>
  idX idY iMap {@link -map};                                                            <span class="c-cmt"># Transform idX -> idY</span>
  idY <a href="data.html#mth_-print" class="code">-print</a>;                                                                   <span class="c-cmt"># Print idY; should be</span>
                                                                                <span class="c-cmt">#   ( (2 2 3) (5.33333 4.5 16.4286) )</span>

  idImap idWtab "add" "mult" 0. 1. iMap {@link -setup_i};                               <span class="c-cmt"># Setup prob. semiring aggr. operator</span>
  iMap {@link -status}; iMap.{@link tmx} <a href="data.html#mth_-print" class="code">-print</a>;                                                <span class="c-cmt"># Print setup</span>
  idX idY iMap {@link -map};                                                            <span class="c-cmt"># Transform idX -> idY</span>
  idY <a href="data.html#mth_-print" class="code">-print</a>;                                                                   <span class="c-cmt"># Print idY; should be</span>
                                                                                <span class="c-cmt">#   ( (1 1 1) (2 2 3) )</span>
  </pre>

  @see tmx Transformation matrix <b><i>w</i></b>
  @see aop Aggregation operation <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
  @see wop Weighting operation <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
  @see zero Neutral element <span style="text-decoration:overline">0</span> of the aggregation operation
END_MAN

CLASS:   vmap
/cProject                                                                      # Generate ANSI C compatible code
/cxx_nconv                                                                     # Use strict C++ naming conventions

## C/C++ files
INCLUDE: "dlp_matrix.h"                                                        # Include matric library 
FILE:    vmap_impl.c                                                           # Implementation

## Error
ERROR:   VMP_OPCODE
COMMENT: '%s' is not a valid %s operation name.
/html MAN:
  <p>This error is caused by the {@link -setup} and {@link -setup_i} methods if one of the operation names is
  invalid. Use <a href="function.html#mth_-list" class="code">-list</a> <code>scalops</code> /
  <code>saggrops</code> / <code>strops</code> to get lists of valid operation names.</p>
  @param 1 The invalid operation name
  @param 2 The operation type (scalar, aggregation or string)
END_MAN

ERROR: VMP_NOTSETUP
COMMENT: Mapping operator not properly set up%s.
/html MAN:
  <p>This error is caused by
  <ul>
    <li>the {@link -map} method if the fields of an instance are not properly setup for
    the computation</li>
<!--
    <li>by setup methods (@link -setup}, {@link -setup_i}) if the data passed are
    inconsistent or insufficient to setup the mapping operator.</li>
-->
  </ul>
  <p>You may use {@link -status} to have a checkup of the instances setup performed
  and to get detailled information on the problem.</p>
  @param 1 Error description or hint to further information
END_MAN

## Protected fields
FIELD:   type
COMMENT: Floating point type code for calculations.
TYPE:    short
INIT:    T_DOUBLE
FLAGS:   /noset
/html MAN:
  <p>This field defines the floating point data type for calculations. The value may
  either be <code>T_FLOAT</code> (=3004) for single precision floats or
  <code>T_DOUBLE</code> (=3008) for double precision floats.</p>
  <h4>Remarks</h4>
  <p>This field is write protected and can only be modified through the {@link -setup}.</p>
  @see -setup
END_MAN

FIELD:   aop
COMMENT: Aggregation operation (scalar operation code)
TYPE:    short
INIT:    -1
FLAGS:   /noset
/html MAN:
  <p>This field contains the dLabPro operation code of the aggregation operation <img src="../resources/oplus.gif"
  width="11" height="11" border="0" align="absmiddle"> of the vector transformation (see <a href="#">above</a>).</p>
  <h4>Remarks</h4>
  <ul>
    <li>This field is write protected and can only be modified through the {@link -setup}
    or {@link -setup_i} methods.</li>
  </ul>
  @see zero
  @see -setup
  @see -setup_i
  @see -map
END_MAN

FIELD:   wop
COMMENT: Weighting operation (scalar operation code)
TYPE:    short
INIT:    -1
FLAGS:   /noset
/html MAN:
  <p>This field contains the dLabPro operation code of the weighting operation <img src="../resources/otimes.gif"
  width="11" height="11" border="0" align="absmiddle"> of the vector transformation (see <a href="#">above</a>).</p>
  <h4>Remarks</h4>
  <ul>
    <li>This field is write protected and can only be modified through the {@link -setup}
    or {@link -setup_i} methods.</li>
  </ul>
  @see -setup
  @see -setup_i
  @see -map
END_MAN

FIELD:   zero
COMMENT: Neutral element of aggregation operation
TYPE:    double
FLAGS:   /noset
/html MAN:
  <p>This field contains the neutral element <span style="text-decoration:overline">0</span> of the aggregation
  operation <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle"> of the vector
  transformation (see <a href="#">above</a>) such that</p>
  <p class="indent"><i>a</i> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
  <span style="text-decoration:overline">0</span> = <i>a</i>.</p>
  <h4>Remarks</h4>
  <ul>
    <li>This field is write protected and can only be modified through the {@link -setup}
      or {@link -setup_i} methods.</li>
    <li>The value is used by {@link -setup_i} to build the transformation matrix.</li>
    <li>Actually, the {@link -map} method will <em>skip</em> input components (summands in the aggregation operation
      <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">, see <a href="#">above</a>)
      which are weighted with <span style="text-decoration:overline">0</span>. Thus the transformation will work
      properly even if <i>a</i> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle"> <span
      style="text-decoration:overline">0</span> does not equal <i>a</i>. In other words, the {@link -map} method
      enforces <i>a</i> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
      <span style="text-decoration:overline">0</span> to be 0 independently of <img src="../resources/otimes.gif" width="11"
      height="11" border="0" align="absmiddle"> and <span style="text-decoration:overline">0</span>.</li>
  </ul>
  @see aop
  @see -setup
  @see -setup_i
  @see -map
END_MAN

FIELD:   tmx
COMMENT: The vector transformation matrix
TYPE:    INSTANCE(data)
FLAGS:   /noset
/html MAN:
  <p>The vector transformation matrix <b><i>w</i></b> = (<i>w</i><sup>(<i>m n</i>)</sup>) is used by the {@link -map}
  method to transform input vectors <nobr>(<i>x</i><sup>(0)</sup>, <i>x</i><sup>(1)</sup>, ...,
  <i>x</i><sup>(<i>N</i>-1)</sup>)</nobr> into output vectors <nobr>(<i>y</i><sup>(0)</sup>, <i>y</i><sup>(1)</sup>,
  ..., <i>y</i><sup>(<i>M</i>-1)</sup>)</nobr> by a generalized matrix product such that</p>
  <p class="indent"><img src="../resources/vmap/0001.gif" width="172" height="41" border="0" align="absmiddle"></p>
  <p>(see <a href="vmap.html">above</a>). The number of components <i>N</i> = <code>tmx.<a href="data.html#fld_dim"
  class="code">dim</a></code> of this matrix defines the dimensionality of the input vectors, the number of records
  <i>M</i> = <code>tmx.<a href="data.html#fld_nrec" class="code">nrec</a></code> defines the dimensionality of the output
  vectors.</p>
  <p>The matrix defines a set of "mapping weights" which are ordered as follows:</p>
  <table class="indent">
    <tr>
      <td rowspan="4" class="hidden" style="vertical-align:top"><i>N</i><br>&uarr;</td>
      <td><i>w</i><sup>(0 <i>N</i>-1)</sup></td>
      <td><i>w</i><sup>(1 <i>N</i>-1)</sup></td>
      <td>...</td>
      <td><i>w</i><sup>(<i>M</i>-1 <i>N</i>-1)</sup></td>
    </tr>
    <tr>
      <td>...</td>
      <td>...</td>
      <td> </td>
      <td>...</td>
    </tr>
    <tr>
      <td><i>w</i><sup>(0 1)</sup></td>
      <td><i>w</i><sup>(1 1)</sup></td>
      <td>...</td>
      <td><i>w</i><sup>(<i>M</i>-1 1)</sup></td>
    </tr>
    <tr>
      <td><i>w</i><sup>(0 0)</sup></td>
      <td><i>w</i><sup>(1 0)</sup></td>
      <td>...</td>
      <td><i>w</i><sup>(<i>M</i>-1 0)</sup></td>
    </tr>
    <tr>
      <td class="hidden"> </td>
      <td colspan="4" class="hidden" style="text-align:right"> &rarr; <i>M</i></td>
    </tr>
  </table>
  <h4>Remarks</h4>
  <ul>
    <li>This field is write protected and can only be modified through the {@link -setup}
    or {@link -setup_i} methods.</li>
  </ul>
  @see -setup
  @see -setup_i
  @see -map
  @see aop
  @see wop
END_MAN

FIELD:   weak_tmx
COMMENT: Vector transformation informations for weak tmx matrix
TYPE:    INSTANCE(data)
FLAGS:   /noset
/html MAN:
  <p>This is a instance containing vector transformation informations
  for weak used transformation matrizies. Such matrizies are detected
  by {@link weak_thrsh} when executing {@link -setup} or {@link -setup_i}.
  If given transformation is weakly used such a information instance
  is created.</p>
  <p>It contains two components for every output dimension. One with
  the input indizies (Id[N]) and one with the weights (W[N]). The
  number of records is the maximal number of used inputs for one
  output. Outputs with less input than other contain some input
  indizies equal -1.</p>
  <p>If this object is not empty it is used for mapping calculation
  in {@link -map} instead of the full transformation matrix.</p>
  @see weak_thrsh
END_MAN

FIELD:   weak_thrsh
COMMENT: Precentage threshold for usage of weak used matrix algorithm
TYPE:    double
INIT:    0.1
/html MAN:
  <p>This threshold defines the percentage of maximum used cells in transformation matrix
  when weak used matrix algorithm should be used. This algorithm transforms the matrix
  in vectors for each mixture. The mixture vectors contain Gaussian index and weight.
  So the mapping operation will be much more faster in that case. This value must be
  set before {@link -setup} or {@link -setup_i} is used.</p>
  @see weak_tmx
END_MAN

## Options
OPTION:  /float
COMMENT: Use single precision floating point numbers.
/html MAN:
  <p>The computation of distances and probability denstities can be done with
  single or double precision. This option selects single presicion.</p>
  <h4>{@link -setup}</h4>
  <p>Convert all data to single precision floating point numbers. By default
  the floating point precision is automatically obtained from the transformation matrix
  data (parameter <code>idTmx</code>).</p>
END_MAN

OPTION:  /double
COMMENT: Use double precision floating point numbers.
/html MAN:
  <p>The computation of distances and probability denstities can be done with
  single or double precision. This option selects double presicion.</p>
  <h4>{@link -setup}</h4>
  <p>Convert all data to double precision floating point numbers. By default
  the floating point precision is automatically obtained from the transformation matrix
  data (parameter <code>idTmx</code>).</p>
END_MAN

## Methods - setup
METHOD:  -setup
SYNTAX:  (data idTmx, string sAop, string sWop, double nZero)
COMMENT: Setup with vector transformation matrix.
/html MAN:
  <p>This method defines the vector transformation operation by specifying the <a href="#fld_tmx">transformation matrix
  <b><i>w</i></b></a>=<code>idTmx</code>, an aggregation operation <img src="../resources/oplus.gif" width="11" height="11"
  border="0" align="absmiddle"> = <code>sAop</code>, a weighting operation <img src="../resources/otimes.gif" width="11"
  height="11" border="0" align="absmiddle"> = <code>sWop</code> and a neutral element <span
  style="text-decoration:overline">0</span> = <code>nZero</code> for the aggregation operation.</p>
  <p>The following table shows how to set up typical semirings:</p>
  <table class="indent" cellpadding="3">
    <tr>
      <th style="text-align:center;"><img src="../resources/oplus.gif" width="11" height="11" border="0"
        align="absmiddle">&nbsp;<br><code><b>sAop</b></code></th>
      <th style="text-align:center;"><img src="../resources/otimes.gif" width="11" height="11" border="0"
        align="absmiddle">&nbsp;<br><code><b>sWop</b></code></th>
      <th style="text-align:center;"><span style="text-decoration:overline">0</span><br><code><b>nZero</b></code></th>
      <th style="text-align:center;"><span style="text-decoration:overline">1</span><br>&nbsp;</th>
      <th>&nbsp;<br>Semiring</th>
    </tr>
    <tr>
      <td style="text-align:center;">"add"</td>
      <td style="text-align:center;">"mult"</td>
      <td style="text-align:center;">0</td>
      <td style="text-align:center;">1</td>
      <td>probability semiring (ordinary matrix product)</td>
    </tr>
    <tr>
      <td style="text-align:center;">"lsadd"</td>
      <td style="text-align:center;">"add"</td>
      <td style="text-align:center;"><a href="function.html#mth_INF" class="code">INF</a></td>
      <td style="text-align:center;">0</td>
      <td>logarithmic semiring</td>
    </tr>
    <tr>
      <td style="text-align:center;">"min"</td>
      <td style="text-align:center;">"add"</td>
      <td style="text-align:center;"><a href="function.html#mth_INF" class="code">INF</a></td>
      <td style="text-align:center;">0</td>
      <td>tropical semiring</td>
    </tr>
  </table>

  @param idTmx Vector transformation matrix, see field {@link tmx} for a description of the expected format (symbolic
               components will be ignored)
  @param sAop  Scalar operation name defining the aggregation operation <img src="../resources/oplus.gif" width="11"
               height="11" border="0" align="absmiddle"> (see <a href="#">above</a>, use <a
               href="function.html#mth_-list" class="code">-list</a><code> scalops</code> to get a list of valid
               operation names)
  @param sWop  Scalar operation name defining the weighting operation <img src="../resources/otimes.gif" width="11"
               height="11" border="0" align="absmiddle"> (see <a href="#">above</a>, use <a
               href="function.html#mth_-list" class="code">-list</a><code> scalops</code> to get a list of valid
               operation names)
  @param nZero Neutral element <span style="text-decoration:overline">0</span> of the aggregation operation such that
               <i>a</i> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle"> <span
               style="text-decoration:overline">0</span> = <i>a</i> (see field {@link zero} for usage details)
  @see <a href="#">Class description</a>
  @see tmx
  @see aop
  @see wop
  @see zero
  @see -setup_i
  @see -map
  @see /float
  @see /double
END_MAN

METHOD:  -setup_i
SYNTAX:  (data idImap, data idWtab, string sAop, string sWop, double nZero, double nOne)
COMMENT: Setup with index map and weight table.
/html MAN:
  <p>This method defines a simple component swapping or interpolating vector transformation operation by specifiying an
  index map <i><b>m</b><sub>I</sub></i> = <code>idImap</code>, a weight table <i><b>m</b><sub>W</sub></i> =
  <code>idWtab</code>, an aggregation operation <img src="../resources/oplus.gif" width="11" height="11" border="0"
  align="absmiddle"> = <code>sAop</code>, a weighting operation <img src="../resources/otimes.gif" width="11" height="11"
  border="0" align="absmiddle"> = <code>sWop</code>, a neutral element <span style="text-decoration:overline">0</span>
  = <code>nZero</code> for the aggregation operation and a neutral element <span
  style="text-decoration:overline">1</span> = <code>nOne</code> for the aggregation operation. {@link -setup_i} converts
  the index map and the weight table into a <a href="#fld_tmx">transformation matrix <b><i>w</i></b></a>.</p>

  <p>The following table shows how to set up typical semirings:</p>
  <table class="indent" cellpadding="3">
    <tr>
      <th style="text-align:center;"><img src="../resources/oplus.gif" width="11" height="11" border="0"
        align="absmiddle">&nbsp;<br><code><b>sAop</b></code></th>
      <th style="text-align:center;"><img src="../resources/otimes.gif" width="11" height="11" border="0"
        align="absmiddle">&nbsp;<br><code><b>sWop</b></code></th>
      <th style="text-align:center;"><span style="text-decoration:overline">0</span><br><code><b>nZero</b></code></th>
      <th style="text-align:center;"><span style="text-decoration:overline">1</span><br><code><b>nOne</b></code></th>
      <th>&nbsp;<br>Semiring</th>
    </tr>
    <tr>
      <td style="text-align:center;">"add"</td>
      <td style="text-align:center;">"mult"</td>
      <td style="text-align:center;">0</td>
      <td style="text-align:center;">1</td>
      <td>probability semiring (ordinary matrix product)</td>
    </tr>
    <tr>
      <td style="text-align:center;">"lsadd"</td>
      <td style="text-align:center;">"add"</td>
      <td style="text-align:center;"><a href="function.html#mth_INF" class="code">INF</a></td>
      <td style="text-align:center;">0</td>
      <td>logarithmic semiring</td>
    </tr>
    <tr>
      <td style="text-align:center;">"min"</td>
      <td style="text-align:center;">"add"</td>
      <td style="text-align:center;"><a href="function.html#mth_INF" class="code">INF</a></td>
      <td style="text-align:center;">0</td>
      <td>tropical semiring</td>
    </tr>
  </table>

  <h4>Example</h4>
  <p>Suppose we have the following index map and weight table:</p>
  <p class="indent"><table>
    <tr>
      <td class="hidden" style="text-align:right" colspan="2"><i><b>m</b><sub>I</sub></i> =</td>
      <td>&nbsp;1&nbsp;</td>
        <td>&nbsp;0&nbsp;</td>
        <td>&nbsp;0&nbsp;</td>
        <td>&nbsp;2&nbsp;</td>
        <td>&nbsp;1&nbsp;</td>
        <td>&nbsp;2&nbsp;</td>
        <td>&nbsp;2&nbsp;</td>
      <td class="hidden">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
      <td class="hidden" style="text-align:right" colspan="2"><i><b>m</b><sub>W</sub></i> =</td>
      <td><i>g</i><sup>(0)</sup></td><td><i>g</i><sup>(1)</sup></td><td><i>g</i><sup>(2)</sup></td>
        <td><i>g</i><sup>(3)</sup></td><td><i>g</i><sup>(4)</sup></td><td><i>g</i><sup>(5)</sup></td>
        <td><i>g</i><sup>(6)</sup></td>
    </tr>
    <tr>
      <td colspan="2" class="hidden">&nbsp;</td>
      <td colspan="7" class="hidden"> </td>
      <td colspan="1" class="hidden"> </td>
      <td colspan="2" class="hidden"> </td>
      <td colspan="7" class="hidden"> </td>
    </tr>
    <tr><td colspan="19" class="hidden">
      Now we pass these objects to {@link -setup_i} in two different ways and get the following<br>
      transformation matrices <b><i>w</i></b><sub>1</sub> and <b><i>w</i></b><sub>2</sub><br>&nbsp;
    </td></tr>
    <tr>
      <td class="hidden" colspan="2"><u>Case 1</u>:</td>
      <td class="hidden" colspan="7"><b><i>w</i></b><sub>1</sub></td>
      <td class="hidden"> </td>
      <td class="hidden" colspan="2"><u>Case 2</u>:</td>
      <td class="hidden" colspan="7"><b><i>w</i></b><sub>2</sub></td>
    <tr>
      <td class="hidden" rowspan="4"><code>idImap</code> = <i><b>m</b><sub>I</sub></i><br>
        <code>idWtab</code> = <code>NULL</code>&nbsp;&nbsp;&nbsp;</td>
      <td class="hidden"><i>M</i></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">1</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">1</span></td>
        <td>&nbsp;<span style="text-decoration:overline">1</span></td>
      <td class="hidden" rowspan="4"> </td>
      <td class="hidden" rowspan="4"><code>idImap</code> = <i><b>m</b><sub>I</sub></i><br>
        <code>idWtab</code> = <i><b>m</b><sub>W</sub>&nbsp;&nbsp;&nbsp;</td>
      <td class="hidden"><i>M</i></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td><i>g</i><sup>(3)</sup></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td><i>g</i><sup>(5)</sup></td>
        <td><i>g</i><sup>(6)</sup></td>
    </tr>
  <tr>
      <td class="hidden">&nbsp;&uarr;</td>
        <td>&nbsp;<span style="text-decoration:overline">1</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">1</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
      <td class="hidden">&nbsp;&uarr;</td>
        <td><i>g</i><sup>(0)</sup></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td><i>g</i><sup>(4)</sup></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
    </tr>
  <tr>
      <td class="hidden"> </td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">1</span></td>
        <td>&nbsp;<span style="text-decoration:overline">1</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;<span style="text-decoration:overline">0</span></td>
      <td class="hidden"> </td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td><i>g</i><sup>(1)</sup></td>
        <td><i>g</i><sup>(2)</sup></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
        <td>&nbsp;&nbsp;<span style="text-decoration:overline">0</span></td>
    </tr>
  <tr>
      <td class="hidden"> </td>
      <td class="hidden" colspan="7" style="text-align:right">&rarr; <i>N</i></td>
      <td class="hidden"> </td>
      <td class="hidden" colspan="7" style="text-align:right">&rarr; <i>N</i></td>
    </tr>
  </table></p>
  <p class="indent">Remark: The maximal index value in <code>idImap</code> is 2, so the output dimensionality is
  <i>M</i> = 3.</P>
  <p>Given the transformation matrices above the {@link -map} method will transform 7-dimensional input vectors
  <i>x</i> = <nobr>(<i>x</i><sup>(0)</sup>, ..., <i>x</i><sup>(6)</sup>)</nobr> into 3-dimensional output vectors
  <i>y</i> = <nobr>(<i>y</i><sup>(0)</sup>, <i>y</i><sup>(1)</sup>, <i>x</i><sup>(2)</sup>)</nobr> as follows:</p>
  <table class="indent">
    <tr>
      <td class="hidden"><u>Case 1</u>:&nbsp;&nbsp;&nbsp;</td>
      <td class="hidden">
        <i>y</i><sup>(0)</sup> =
          <i>x</i><sup>(1)</sup> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          <i>x</i><sup>(2)</sup><br>
        <i>y</i><sup>(1)</sup> =
          <i>x</i><sup>(0)</sup> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          <i>x</i><sup>(4)</sup><br>
        <i>y</i><sup>(2)</sup> =
          <i>x</i><sup>(3)</sup> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          <i>x</i><sup>(5)</sup> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          <i>x</i><sup>(6)</sup><br>&nbsp;
      </td>
      <td class="hidden"> </td>
    </tr>
    <tr>
      <td class="hidden"><u>Case 2</u>:&nbsp;&nbsp;&nbsp;</td>
      <td class="hidden">
        <i>y</i><sup>(0)</sup> =
          (<i>g</i><sup>(1)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(1)</sup>)
          <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          (<i>g</i><sup>(2)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(2)</sup>)<br>
        <i>y</i><sup>(1)</sup> =
          (<i>g</i><sup>(0)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(0)</sup>)
          <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          (<i>g</i><sup>(4)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(4)</sup>)<br>
        <i>y</i><sup>(2)</sup> =
          (<i>g</i><sup>(3)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(3)</sup>)
          <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          (<i>g</i><sup>(5)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(5)</sup>)
          <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          (<i>g</i><sup>(6)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(6)</sup>)<br>&nbsp;
      </td>
      <td class="hidden">
        =
          (<i>w</i><sup>(0 1)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(1)</sup>)
          <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          (<i>w</i><sup>(0 2)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(2)</sup>)<br>
        =
          (<i>w</i><sup>(1 0)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(0)</sup>)
          <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          (<i>w</i><sup>(1 4)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(4)</sup>)<br>
        =
          (<i>w</i><sup>(2 3)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(3)</sup>)
          <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          (<i>w</i><sup>(2 5)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(5)</sup>)
          <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle">
          (<i>w</i><sup>(2 6)</sup> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">
            <i>x</i><sup>(6)</sup>)
      </td>
    </tr>
  </table>
  <p class="inden">Remark: The rightmost formulas use the notation of the transformation matrix elements
  <i>w</i><sup>(<i>m</i> <i>n</i>)</sup> (as introdcued in the description of field {@link tmx}) instead of the weight
  table elements <i>g</i><sup>(<i>m</i>)</sup>.</p>
</p>

  @param idImap Index map with exactly one numeric component specifying the output vector component for each
                input vector component (the record index stands for the input vector component); the
                number of records <i>N</i> = <code>idImap.<a href="data.html#fld_nrec" class="code">nrec</a></code>
                defines the input vectors' dimensionality, the maximal value found in <code>idImap</code> defines the
                output vectors' dimensionality
  @param idWtab Index map with exactly one numeric component and as many records as <code>idImap</code> specifying
                interpolation weights for the input vector components; may be <code>NULL</code> for unweighted mapping
  @param sAop   Scalar operation name defining the aggregation operation <img src="../resources/oplus.gif" width="11"
                height="11" border="0" align="absmiddle"> (see <a href="#">above</a>, use <a
                href="function.html#mth_-list" class="code">-list</a><code> scalops</code> to get a list of valid
                operation names)
  @param sWop   Scalar operation name defining the weighting operation <img src="../resources/otimes.gif" width="11"
                height="11" border="0" align="absmiddle"> (see <a href="#">above</a>, use <a
                href="function.html#mth_-list" class="code">-list</a><code> scalops</code> to get a list of valid
                operation names)
  @param nZero  Neutral element <span style="text-decoration:overline">0</span> of the aggregation operation such that
                <i>a</i> <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle"> <span
                style="text-decoration:overline">0</span> = <i>a</i> (see field {@link zero} for usage details)
  @param nOne   Neutral element <span style="text-decoration:overline">1</span> of the weighting operation such that
                <i>a</i> <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle"> <span
                style="text-decoration:overline">1</span> = <i>a</i>
  @see <a href="#">Class description</a>
  @see -setup
  @see aop
  @see wop
  @see zero
  @see -map
END_MAN

METHOD:  -status
SYNTAX:  ()
COMMENT: Prints status information of the vector mapping operator.
/html MAN:
  <p>Prints a report of the <code>vmap</code> setup at the console.</p>
END_MAN

METHOD:  -map
SYNTAX:  (data idSrc, data idDst)
COMMENT: Transform vectors.
/html MAN:
  <p>Transforms a sequence of input vectors <i>x<sub>k</sub></i> (contained in <code>idSrc</code>) into a sequence of
  output vectors <i>y<sub>k</sub></i> (written into <code>idDst</code>) using a <a href="#fld_tmx">transformation
  matrix <b><i>w</i></b></a> (field {@link tmx}) as follows:</p>
  <table class="indent">
    <!-- upper -->
    <tr>
      <td class="hidden" colspan="4"> </td>
      <td class="hidden"> </td>
      <td class="hidden"> </td>
      <td class="hidden" colspan="4" style="text-align:right"><a href="#fld_tmx"><b><i>w</i></b></a> = {@link tmx}</td>
    </tr>
    <tr>
      <td class="hidden" colspan="4" rowspan="4" style="text-align:center; vertical-align:middle">{@link -map}</td>
      <td rowspan="4" class="hidden" style="vertical-align:bottom; border-right:1px solid rgb(189,199,211);">&nbsp;</td>
      <td rowspan="4" class="hidden" style="vertical-align:bottom; border-left:1px solid rgb(189,199,211);">&darr;<br><i>N</i></td>
      <td><i>w</i><sup>(0 0)</sup></td>
      <td><i>w</i><sup>(1 0)</sup></td>
      <td>...</td>
      <td><i>w</i><sup>(<i>M</i>-1 0)</sup></td>
    </tr>
    <tr>
      <td><i>w</i><sup>(0 1)</sup></td>
      <td><i>w</i><sup>(1 1)</sup></td>
      <td>...</td>
      <td><i>w</i><sup>(<i>M</i>-1 1)</sup></td>
    </tr>
    <tr>
      <td>...</td>
      <td>...</td>
      <td> </td>
      <td>...</td>
    </tr>
    <tr>
      <td><i>w</i><sup>(0 <i>N</i>-1)</sup></td>
      <td><i>w</i><sup>(1 <i>N</i>-1)</sup></td>
      <td>...</td>
      <td><i>w</i><sup>(<i>M</i>-1 <i>N</i>-1)</sup></td>
    </tr>
    <tr>
      <td colspan="4" class="hidden" style="text-align:right; border-bottom:1px solid rgb(189,199,211);"> </td>
      <td class="hidden" style="border-right:1px solid rgb(189,199,211); border-bottom:1px solid rgb(189,199,211);"> </td>
      <td class="hidden" style="border-left:1px solid rgb(189,199,211); border-bottom:1px solid rgb(189,199,211);"> </td>
      <td colspan="4" class="hidden" style="text-align:right; border-bottom:1px solid rgb(189,199,211);">&rarr; <i>M</i></td>
    </tr>
    <!-- lower -->
    <tr>
      <td colspan="4" class="hidden" style="text-align:right; border-top:1px solid rgb(189,199,211);">&rarr; <i>N</i></td>
      <td class="hidden" style="border-right:1px solid rgb(189,199,211); border-top:1px solid rgb(189,199,211);"> </td>
      <td class="hidden" style="border-left:1px solid rgb(189,199,211); border-top:1px solid rgb(189,199,211);"> </td>
      <td colspan="4" class="hidden" style="text-align:right; border-top:1px solid rgb(189,199,211);"> </td>
    </tr>
    <tr>
      <td><i>x</i><sub>0</sub><sup>(0)</sup></td>
      <td><i>x</i><sub>0</sub><sup>(1)</sup></td>
      <td>...</td>
      <td><i>x</i><sub>0</sub><sup>(<i>N</i>-1)</sup></td>
      <td rowspan="4" class="hidden" style="vertical-align:bottom; border-right:1px solid rgb(189,199,211);">&darr;<br><i>K</i></td>
      <td rowspan="4" class="hidden" style="vertical-align:bottom; border-left:1px solid rgb(189,199,211);">&nbsp;</td>
      <td><i>y</i><sub>0</sub><sup>(0)</sup></td>
      <td><i>y</i><sub>0</sub><sup>(1)</sup></td>
      <td>...</td>
      <td><i>y</i><sub>0</sub><sup>(<i>M</i>-1)</sup></td>
    </tr>
    <tr>
      <td><i>x</i><sub>1</sub><sup>(0)</sup></td>
      <td><i>x</i><sub>1</sub><sup>(1)</sup></td>
      <td>...</td>
      <td><i>x</i><sub>1</sub><sup>(<i>N</i>-1)</sup></td>
      <td><i>y</i><sub>1</sub><sup>(0)</sup></td>
      <td><i>y</i><sub>1</sub><sup>(1)</sup></td>
      <td>...</td>
      <td><i>y</i><sub>1</sub><sup>(<i>M</i>-1)</sup></td>
    </tr>
    <tr>
      <td>...</td>
      <td>...</td>
      <td> </td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td> </td>
      <td>...</td>
    </tr>
    <tr>
      <td><i>x</i><sub><i>K</i>-1</sub><sup>(0)</sup></td>
      <td><i>x</i><sub><i>K</i>-1</sub><sup>(1)</sup></td>
      <td>...</td>
      <td><i>x</i><sub><i>K</i>-1</sub><sup>(<i>N</i>-1)</sup></td>
      <td><i>y</i><sub><i>K</i>-1</sub><sup>(0)</sup></td>
      <td><i>y</i><sub><i>K</i>-1</sub><sup>(1)</sup></td>
      <td>...</td>
      <td><i>y</i><sub><i>K</i>-1</sub><sup>(<i>M</i>-1)</sup></td>
    </tr>
    <tr>
      <td class="hidden" colspan="4"><code>idSrc</code></td>
      <td class="hidden"> </td>
      <td class="hidden"> </td>
      <td class="hidden" colspan="4" style="text-align:right"><code>idDst</code></td>
    </tr>
  </table>
  <p>where <i>N</i> = {@link tmx}.<a href="data.html#fld_dim" class="code">dim</a> denotes the input dimensionality
  (i.e. the number of components of the <a href="#fld_tmx">transformation matrix</a> {@link tmx}), <i>M</i> =
  {@link tmx}.<a href="data.html#fld_nrec" class="code">nrec</a> denotes the output dimensionality (i.e. the number of
  records of the <a href="#fld_tmx">transformation matrix</a> {@link tmx}) and <i>K</i> = <code>idSrc.</code><a
  href="data.html#fld_nrec" class="code">nrec</a> denotes the number of input vectors. The elements
  <i>y</i><sub><i>k</i></sub><sup>(<i>m</i>-1)</sup> of the output vectors are calculated as the generalized scalar
  product</p>
  <p class="indent"><img src="../resources/vmap/0002.gif" width="172" height="41" border="0" align="absmiddle"> (1)</p>
  </p> over an arbitrary semiring {<b>R</b>, <img src="../resources/oplus.gif" width="11" height="11" border="0"
  align="absmiddle">, <img src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle">, <span
  style="text-decoration:overline">0</span>, <span style="text-decoration:overline">1</span>} (see <a href="#">class
  description</a> for details).</p>
  <p>The number of <em>numeric</em> components in the input vector sequence <code>idSrc</code> should be equal to the
  number of components of the <a href="#fld_tmx">transformation matrix</a> {@link tmx}, however, this is not enforced.
  The type of the numeric components of <code>idSrc</code> does not matter. The output vector sequence
  <code>idDst</code> will contain as many <em>numeric</em> components as there are <em>records</em> in the <a
  href="#fld_tmx">transformation matrix</a> {@link tmx}. All numeric components in <code>idDst</code> will be of double
  precision floating point type. Additionally, any symbolic components will be copied from <code>idSrc</code> to
  <code>idDst</code>, however, their component index may change.</p>

  <h4>Remarks</h4>
  <ul>
    <li>The computation is done in the exact order specified in equation (1). You should consider this if one or both of
    the operations <img src="../resources/oplus.gif" width="11" height="11" border="0" align="absmiddle"> or <img
    src="../resources/otimes.gif" width="11" height="11" border="0" align="absmiddle"> are not commutative!</li>
  </ul>

  @param idSrc Input vector sequence
  @param idDst Output vector sequence, may be identical with <code>idSrc</code>
  @see <a href="#">Class description</a>
  @see "<a href='#mth_-setup_i' class='code'>-setup_i</a> (for a computation example)"
  @see -setup
  @see tmx
END_MAN

## Generate and quit
-cgen
quit

## EOF
