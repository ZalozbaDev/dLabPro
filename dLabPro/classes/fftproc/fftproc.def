## dLabPro class CFFTproc (FFTproc)
## - Definition file
##
## AUTHOR : Matthias Eichner
## PACKAGE: dLabPro/classes
## 
## Copyright 2013 dLabPro contributors and others (see COPYRIGHT file) 
## - Chair of System Theory and Speech Technology, TU Dresden
## - Chair of Communications Engineering, BTU Cottbus
## 
## This file is part of dLabPro.
## 
## dLabPro is free software: you can redistribute it and/or modify it under the
## terms of the GNU Lesser General Public License as published by the Free
## Software Foundation, either version 3 of the License, or (at your option)
## any later version.
## 
## dLabPro is distributed in the hope that it will be useful, but WITHOUT ANY
## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
## details.
## 
## You should have received a copy of the GNU Lesser General Public License
## along with dLabPro. If not, see <http://www.gnu.org/licenses/>.

PLATFORM: GNUC++
COMPILER: gcc
AR:       ar

PROJECT:  FFTproc
COMMENT:  FFT class based on FBAproc
AUTHOR:   Matthias Eichner
VERSION:  1.0 DLP

CLASS:    FFTproc
SUPERCLASS: ../fbaproc/fbaproc.def
/cxx_nconv                                                                      # Use strict C++ naming conventions

MAN:
END_MAN

## Files and locations

INCLUDE: "dlp_data.h"
INCLUDE: "dlp_math.h"

FILE: fft_work.cpp

## Fields

FIELD:   order
COMMENT: FFT analysis order. Adjusts analysis length to 2^order if set.
TYPE:    short
INIT:    9
CODE:
  m_nLen=(INT16)dlm_pow(2,m_nOrder);
  m_nOutDim = m_nLen/2;
END_CODE

## Methods

METHOD:  -analyze
COMMENT: Run FFT.
SYNTAX:  (data idSignal, data idPitch, data idReal, data idImag)
MAN:
         Runs the analysis. Instance dSignal contains the signal
         to analyse in the first component. The first alpha numeric
         component (if exist) is used as label component. In case 
         of pitch synchronuous analysis dPitch contains the pitch 
         information. dPitch must have two numeric components. The
         and as many records as signal periods in dSignal. The first
         component contains the lenght of the period in samples, the 
         second contains the voiced/unvoiced information 
         (1-voiced/0-unvoiced).
         If dPitch is omitted pitch asynchronuous analysis is performed.
END_MAN

#METHOD:  -synthesize
#COMMENT: Synthesis from cepstral coefficients.
#SYNTAX:  (data dCep, data dPitch, data dSig)
#MAN:
#         <-synthesize> computes synthetic speech from cepstral-coefficients
#         and pitch data.
#
#          dCep   - Cepstral Coefficients
#          dPitch - Pitch data
#          dSig   - synthesized speech samples
#
#          See also: <srate> <crate> <order>
#END_MAN

METHOD:  -warp
COMMENT: Warping 
SYNTAX:  (data in, data out, double lambda, int odim)
MAN:
END_MAN

## Options

OPTION:  /lmag
COMMENT: Compute logarithm of magnitude spectrum rather than complex spectrum.
CODE:
  m_bMag=FALSE;
END_CODE

OPTION:  /mag
COMMENT: Compute magnitude spectrum rather than complex spectrum.
CODE:
  m_bLmag=FALSE;
END_CODE

OPTION:  /nse
COMMENT: Enable noise reduction
MAN:
  Enable noise reduction (spectral subtraction) - see FBAproc.nse_len
END_MAN

## Interface code snippets

DONECODE:
  DONE;
END_CODE

-cgen
quit

## EOF
